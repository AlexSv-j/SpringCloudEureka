server.port=8085

##config via config service
spring.datasource.url=jdbc:postgresql://localhost:5432/eureka-persons
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

#Resiliance4j
#Retry
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=1s
resilience4j.retry.configs.default.enable-exponential-backoff=true
resilience4j.retry.configs.default.exponential-backoff-multiplier=2
resilience4j.retry.configs.default.ignore-exceptions[0]=java.lang.NullPointerException
resilience4j.retry.configs.default.retry-exceptions[0]=java.util.concurrent.TimeoutException

#resilience4j.retry.instances.notes.base-config = default

#Circui-Breaker
#Feign will wrap all methods with a circuit breaker
#spring.cloud.openfeign.circuitbreaker.enabled=true
#monitor amount request to open status
resilience4j.circuitbreaker.configs.default.sliding-window-size=5
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
#amount in % to move to open status
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
#wait 10 seconds before move to half-open status
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10000

#resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=3
resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold=2s
#resilience4j.circuitbreaker.instances.notes.base-config=defaultCB

eureka.path.config=http://localhost:8761/
eureka.client.service-url.defaultZone=${eureka.path.config}eureka
#Register in th eureka with Ip address, not by DNS name
eureka.instance.prefer-ip-address=true
#unic id for each instance
eureka.instance.instance-id=${spring.application.name}:${random.value}

#load config from config server without bootstrap.properties
spring.application.name=persons
spring.profiles.active=default
config.path=http://localhost:8072/
spring.config.import=configserver:${config.path}

management.endpoints.web.exposure.include=*
#description for microservice
management.info.env.enabled=true

info.app.name=persons
info.app.description=persons description
info.app.version=1.0

management.endpoint.shutdown.enabled=true
endpoints.shutdown.enabled=true
management.endpoint.health.probes.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true


eureka.client.should-unregister-on-shutdown=true

logging.level.com.svichkar.eureka.personservice=debug